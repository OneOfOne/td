package td

// this is a mostly autogenerated file, with a few handmade edits

// Any is just an alias for interface{}
type Any = interface{}

type Type string

const (
	TypeCash   Type = "CASH"
	TypeMargin Type = "MARGIN"
)

type AssetType string

const (
	AssetTypeEquity         AssetType = "EQUITY"
	AssetTypeOption         AssetType = "OPTION"
	AssetTypeIndex          AssetType = "INDEX"
	AssetTypeMutualFund     AssetType = "MUTUAL_FUND"
	AssetTypeCashEquivalent AssetType = "CASH_EQUIVALENT"
	AssetTypeFixedIncome    AssetType = "FIXED_INCOME"
	AssetTypeCurrency       AssetType = "CURRENCY"
)

type Session string

const (
	SessionNormal   Session = "NORMAL"
	SessionAm       Session = "AM"
	SessionPm       Session = "PM"
	SessionSeamless Session = "SEAMLESS"
)

type Duration string

const (
	DurationDay            Duration = "DAY"
	DurationGoodTillCancel Duration = "GOOD_TILL_CANCEL"
	DurationFillOrKill     Duration = "FILL_OR_KILL"
)

type OrderType string

const (
	OrderTypeMarket            OrderType = "MARKET"
	OrderTypeLimit             OrderType = "LIMIT"
	OrderTypeStop              OrderType = "STOP"
	OrderTypeStopLimit         OrderType = "STOP_LIMIT"
	OrderTypeTrailingStop      OrderType = "TRAILING_STOP"
	OrderTypeMarketOnClose     OrderType = "MARKET_ON_CLOSE"
	OrderTypeExercise          OrderType = "EXERCISE"
	OrderTypeTrailingStopLimit OrderType = "TRAILING_STOP_LIMIT"
	OrderTypeNetDebit          OrderType = "NET_DEBIT"
	OrderTypeNetCredit         OrderType = "NET_CREDIT"
	OrderTypeNetZero           OrderType = "NET_ZERO"
)

type ComplexOrderStrategyType string

const (
	ComplexOrderStrategyTypeNone                   ComplexOrderStrategyType = "NONE"
	ComplexOrderStrategyTypeCovered                ComplexOrderStrategyType = "COVERED"
	ComplexOrderStrategyTypeVertical               ComplexOrderStrategyType = "VERTICAL"
	ComplexOrderStrategyTypeBackRatio              ComplexOrderStrategyType = "BACK_RATIO"
	ComplexOrderStrategyTypeCalendar               ComplexOrderStrategyType = "CALENDAR"
	ComplexOrderStrategyTypeDiagonal               ComplexOrderStrategyType = "DIAGONAL"
	ComplexOrderStrategyTypeStraddle               ComplexOrderStrategyType = "STRADDLE"
	ComplexOrderStrategyTypeStrangle               ComplexOrderStrategyType = "STRANGLE"
	ComplexOrderStrategyTypeCollarSynthetic        ComplexOrderStrategyType = "COLLAR_SYNTHETIC"
	ComplexOrderStrategyTypeButterfly              ComplexOrderStrategyType = "BUTTERFLY"
	ComplexOrderStrategyTypeCondor                 ComplexOrderStrategyType = "CONDOR"
	ComplexOrderStrategyTypeIronCondor             ComplexOrderStrategyType = "IRON_CONDOR"
	ComplexOrderStrategyTypeVerticalRoll           ComplexOrderStrategyType = "VERTICAL_ROLL"
	ComplexOrderStrategyTypeCollarWithStock        ComplexOrderStrategyType = "COLLAR_WITH_STOCK"
	ComplexOrderStrategyTypeDoubleDiagonal         ComplexOrderStrategyType = "DOUBLE_DIAGONAL"
	ComplexOrderStrategyTypeUnbalancedButterfly    ComplexOrderStrategyType = "UNBALANCED_BUTTERFLY"
	ComplexOrderStrategyTypeUnbalancedCondor       ComplexOrderStrategyType = "UNBALANCED_CONDOR"
	ComplexOrderStrategyTypeUnbalancedIronCondor   ComplexOrderStrategyType = "UNBALANCED_IRON_CONDOR"
	ComplexOrderStrategyTypeUnbalancedVerticalRoll ComplexOrderStrategyType = "UNBALANCED_VERTICAL_ROLL"
	ComplexOrderStrategyTypeCustom                 ComplexOrderStrategyType = "CUSTOM"
)

type RequestedDestination string

const (
	RequestedDestinationInet    RequestedDestination = "INET"
	RequestedDestinationEcnArca RequestedDestination = "ECN_ARCA"
	RequestedDestinationCboe    RequestedDestination = "CBOE"
	RequestedDestinationAmex    RequestedDestination = "AMEX"
	RequestedDestinationPhlx    RequestedDestination = "PHLX"
	RequestedDestinationIse     RequestedDestination = "ISE"
	RequestedDestinationBox     RequestedDestination = "BOX"
	RequestedDestinationNyse    RequestedDestination = "NYSE"
	RequestedDestinationNasdaq  RequestedDestination = "NASDAQ"
	RequestedDestinationBats    RequestedDestination = "BATS"
	RequestedDestinationC2      RequestedDestination = "C2"
	RequestedDestinationAuto    RequestedDestination = "AUTO"
)

type StopPriceLinkBasis string

const (
	StopPriceLinkBasisManual  StopPriceLinkBasis = "MANUAL"
	StopPriceLinkBasisBase    StopPriceLinkBasis = "BASE"
	StopPriceLinkBasisTrigger StopPriceLinkBasis = "TRIGGER"
	StopPriceLinkBasisLast    StopPriceLinkBasis = "LAST"
	StopPriceLinkBasisBid     StopPriceLinkBasis = "BID"
	StopPriceLinkBasisAsk     StopPriceLinkBasis = "ASK"
	StopPriceLinkBasisAskBid  StopPriceLinkBasis = "ASK_BID"
	StopPriceLinkBasisMark    StopPriceLinkBasis = "MARK"
	StopPriceLinkBasisAverage StopPriceLinkBasis = "AVERAGE"
)

type StopPriceLinkType string

const (
	StopPriceLinkTypeValue   StopPriceLinkType = "VALUE"
	StopPriceLinkTypePercent StopPriceLinkType = "PERCENT"
	StopPriceLinkTypeTick    StopPriceLinkType = "TICK"
)

type StopType string

const (
	StopTypeStandard StopType = "STANDARD"
	StopTypeBid      StopType = "BID"
	StopTypeAsk      StopType = "ASK"
	StopTypeLast     StopType = "LAST"
	StopTypeMark     StopType = "MARK"
)

type PriceLinkBasis string

const (
	PriceLinkBasisManual  PriceLinkBasis = "MANUAL"
	PriceLinkBasisBase    PriceLinkBasis = "BASE"
	PriceLinkBasisTrigger PriceLinkBasis = "TRIGGER"
	PriceLinkBasisLast    PriceLinkBasis = "LAST"
	PriceLinkBasisBid     PriceLinkBasis = "BID"
	PriceLinkBasisAsk     PriceLinkBasis = "ASK"
	PriceLinkBasisAskBid  PriceLinkBasis = "ASK_BID"
	PriceLinkBasisMark    PriceLinkBasis = "MARK"
	PriceLinkBasisAverage PriceLinkBasis = "AVERAGE"
)

type PriceLinkType string

const (
	PriceLinkTypeValue   PriceLinkType = "VALUE"
	PriceLinkTypePercent PriceLinkType = "PERCENT"
	PriceLinkTypeTick    PriceLinkType = "TICK"
)

type TaxLotMethod string

const (
	TaxLotMethodFifo        TaxLotMethod = "FIFO"
	TaxLotMethodLifo        TaxLotMethod = "LIFO"
	TaxLotMethodHighCost    TaxLotMethod = "HIGH_COST"
	TaxLotMethodLowCost     TaxLotMethod = "LOW_COST"
	TaxLotMethodAverageCost TaxLotMethod = "AVERAGE_COST"
	TaxLotMethodSpecificLot TaxLotMethod = "SPECIFIC_LOT"
)

type OrderLegType string

const (
	OrderLegTypeEquity         OrderLegType = "EQUITY"
	OrderLegTypeOption         OrderLegType = "OPTION"
	OrderLegTypeIndex          OrderLegType = "INDEX"
	OrderLegTypeMutualFund     OrderLegType = "MUTUAL_FUND"
	OrderLegTypeCashEquivalent OrderLegType = "CASH_EQUIVALENT"
	OrderLegTypeFixedIncome    OrderLegType = "FIXED_INCOME"
	OrderLegTypeCurrency       OrderLegType = "CURRENCY"
)

type Instruction string

const (
	InstructionBuy         Instruction = "BUY"
	InstructionSell        Instruction = "SELL"
	InstructionBuyToCover  Instruction = "BUY_TO_COVER"
	InstructionSellShort   Instruction = "SELL_SHORT"
	InstructionBuyToOpen   Instruction = "BUY_TO_OPEN"
	InstructionBuyToClose  Instruction = "BUY_TO_CLOSE"
	InstructionSellToOpen  Instruction = "SELL_TO_OPEN"
	InstructionSellToClose Instruction = "SELL_TO_CLOSE"
	InstructionExchange    Instruction = "EXCHANGE"
)

type PositionEffect string

const (
	PositionEffectOpening   PositionEffect = "OPENING"
	PositionEffectClosing   PositionEffect = "CLOSING"
	PositionEffectAutomatic PositionEffect = "AUTOMATIC"
)

type QuantityType string

const (
	QuantityTypeAllShares QuantityType = "ALL_SHARES"
	QuantityTypeDollars   QuantityType = "DOLLARS"
	QuantityTypeShares    QuantityType = "SHARES"
)

type SpecialInstruction string

const (
	SpecialInstructionAllOrNone            SpecialInstruction = "ALL_OR_NONE"
	SpecialInstructionDoNotReduce          SpecialInstruction = "DO_NOT_REDUCE"
	SpecialInstructionAllOrNoneDoNotReduce SpecialInstruction = "ALL_OR_NONE_DO_NOT_REDUCE"
)

type OrderStrategyType string

const (
	OrderStrategyTypeSingle  OrderStrategyType = "SINGLE"
	OrderStrategyTypeOco     OrderStrategyType = "OCO"
	OrderStrategyTypeTrigger OrderStrategyType = "TRIGGER"
)

type Status string

const (
	StatusAwaitingParentOrder  Status = "AWAITING_PARENT_ORDER"
	StatusAwaitingCondition    Status = "AWAITING_CONDITION"
	StatusAwaitingManualReview Status = "AWAITING_MANUAL_REVIEW"
	StatusAccepted             Status = "ACCEPTED"
	StatusAwaitingUrOut        Status = "AWAITING_UR_OUT"
	StatusPendingActivation    Status = "PENDING_ACTIVATION"
	StatusQueued               Status = "QUEUED"
	StatusWorking              Status = "WORKING"
	StatusRejected             Status = "REJECTED"
	StatusPendingCancel        Status = "PENDING_CANCEL"
	StatusCanceled             Status = "CANCELED"
	StatusPendingReplace       Status = "PENDING_REPLACE"
	StatusReplaced             Status = "REPLACED"
	StatusFilled               Status = "FILLED"
	StatusExpired              Status = "EXPIRED"
)

type ActivityType string

const (
	ActivityTypeExecution   ActivityType = "EXECUTION"
	ActivityTypeOrderAction ActivityType = "ORDER_ACTION"
)

type PutCall string

const (
	PutCallPut  PutCall = "PUT"
	PutCallCall PutCall = "CALL"
)

type CurrencyType string

const (
	CurrencyTypeUsd CurrencyType = "USD"
	CurrencyTypeCad CurrencyType = "CAD"
	CurrencyTypeEur CurrencyType = "EUR"
	CurrencyTypeJpy CurrencyType = "JPY"
)

type ExecutionType string

const (
	ExecutionTypeFill ExecutionType = "FILL"
)

type MarketType string

const (
	MarketTypeBond         MarketType = "BOND"
	MarketTypeEquity       MarketType = "EQUITY"
	MarketTypeEtf          MarketType = "ETF"
	MarketTypeForex        MarketType = "FOREX"
	MarketTypeFuture       MarketType = "FUTURE"
	MarketTypeFutureOption MarketType = "FUTURE_OPTION"
	MarketTypeIndex        MarketType = "INDEX"
	MarketTypeIndicator    MarketType = "INDICATOR"
	MarketTypeMutualFund   MarketType = "MUTUAL_FUND"
	MarketTypeOption       MarketType = "OPTION"
	MarketTypeUnknown      MarketType = "UNKNOWN"
)

type Direction string

const (
	DirectionUp   Direction = "up"
	DirectionDown Direction = "down"
)

type DefaultEquityOrderLegInstruction string

const (
	DefaultEquityOrderLegInstructionBuy        DefaultEquityOrderLegInstruction = "BUY"
	DefaultEquityOrderLegInstructionSell       DefaultEquityOrderLegInstruction = "SELL"
	DefaultEquityOrderLegInstructionBuyToCover DefaultEquityOrderLegInstruction = "BUY_TO_COVER"
	DefaultEquityOrderLegInstructionSellShort  DefaultEquityOrderLegInstruction = "SELL_SHORT"
	DefaultEquityOrderLegInstructionNone       DefaultEquityOrderLegInstruction = "NONE"
)

type DefaultEquityOrderType string

const (
	DefaultEquityOrderTypeMarket        DefaultEquityOrderType = "MARKET"
	DefaultEquityOrderTypeLimit         DefaultEquityOrderType = "LIMIT"
	DefaultEquityOrderTypeStop          DefaultEquityOrderType = "STOP"
	DefaultEquityOrderTypeStopLimit     DefaultEquityOrderType = "STOP_LIMIT"
	DefaultEquityOrderTypeTrailingStop  DefaultEquityOrderType = "TRAILING_STOP"
	DefaultEquityOrderTypeMarketOnClose DefaultEquityOrderType = "MARKET_ON_CLOSE"
	DefaultEquityOrderTypeNone          DefaultEquityOrderType = "NONE"
)

type DefaultEquityOrderPriceLinkType string

const (
	DefaultEquityOrderPriceLinkTypeValue   DefaultEquityOrderPriceLinkType = "VALUE"
	DefaultEquityOrderPriceLinkTypePercent DefaultEquityOrderPriceLinkType = "PERCENT"
	DefaultEquityOrderPriceLinkTypeNone    DefaultEquityOrderPriceLinkType = "NONE"
)

type DefaultEquityOrderDuration string

const (
	DefaultEquityOrderDurationDay            DefaultEquityOrderDuration = "DAY"
	DefaultEquityOrderDurationGoodTillCancel DefaultEquityOrderDuration = "GOOD_TILL_CANCEL"
	DefaultEquityOrderDurationNone           DefaultEquityOrderDuration = "NONE"
)

type DefaultEquityOrderMarketSession string

const (
	DefaultEquityOrderMarketSessionAm       DefaultEquityOrderMarketSession = "AM"
	DefaultEquityOrderMarketSessionPm       DefaultEquityOrderMarketSession = "PM"
	DefaultEquityOrderMarketSessionNormal   DefaultEquityOrderMarketSession = "NORMAL"
	DefaultEquityOrderMarketSessionSeamless DefaultEquityOrderMarketSession = "SEAMLESS"
	DefaultEquityOrderMarketSessionNone     DefaultEquityOrderMarketSession = "NONE"
)

type MutualFundTaxLotMethod string

const (
	MutualFundTaxLotMethodFifo        MutualFundTaxLotMethod = "FIFO"
	MutualFundTaxLotMethodLifo        MutualFundTaxLotMethod = "LIFO"
	MutualFundTaxLotMethodHighCost    MutualFundTaxLotMethod = "HIGH_COST"
	MutualFundTaxLotMethodLowCost     MutualFundTaxLotMethod = "LOW_COST"
	MutualFundTaxLotMethodMinimumTax  MutualFundTaxLotMethod = "MINIMUM_TAX"
	MutualFundTaxLotMethodAverageCost MutualFundTaxLotMethod = "AVERAGE_COST"
	MutualFundTaxLotMethodNone        MutualFundTaxLotMethod = "NONE"
)

type OptionTaxLotMethod string

const (
	OptionTaxLotMethodFifo        OptionTaxLotMethod = "FIFO"
	OptionTaxLotMethodLifo        OptionTaxLotMethod = "LIFO"
	OptionTaxLotMethodHighCost    OptionTaxLotMethod = "HIGH_COST"
	OptionTaxLotMethodLowCost     OptionTaxLotMethod = "LOW_COST"
	OptionTaxLotMethodMinimumTax  OptionTaxLotMethod = "MINIMUM_TAX"
	OptionTaxLotMethodAverageCost OptionTaxLotMethod = "AVERAGE_COST"
	OptionTaxLotMethodNone        OptionTaxLotMethod = "NONE"
)

type EquityTaxLotMethod string

const (
	EquityTaxLotMethodFifo        EquityTaxLotMethod = "FIFO"
	EquityTaxLotMethodLifo        EquityTaxLotMethod = "LIFO"
	EquityTaxLotMethodHighCost    EquityTaxLotMethod = "HIGH_COST"
	EquityTaxLotMethodLowCost     EquityTaxLotMethod = "LOW_COST"
	EquityTaxLotMethodMinimumTax  EquityTaxLotMethod = "MINIMUM_TAX"
	EquityTaxLotMethodAverageCost EquityTaxLotMethod = "AVERAGE_COST"
	EquityTaxLotMethodNone        EquityTaxLotMethod = "NONE"
)

type DefaultAdvancedToolLaunch string

const (
	DefaultAdvancedToolLaunchTa   DefaultAdvancedToolLaunch = "TA"
	DefaultAdvancedToolLaunchN    DefaultAdvancedToolLaunch = "N"
	DefaultAdvancedToolLaunchY    DefaultAdvancedToolLaunch = "Y"
	DefaultAdvancedToolLaunchTos  DefaultAdvancedToolLaunch = "TOS"
	DefaultAdvancedToolLaunchNone DefaultAdvancedToolLaunch = "NONE"
	DefaultAdvancedToolLaunchCc2  DefaultAdvancedToolLaunch = "CC2"
)

type AuthTokenTimeout string

const (
	AuthTokenTimeoutFiftyFiveMinutes AuthTokenTimeout = "FIFTY_FIVE_MINUTES"
	AuthTokenTimeoutTwoHours         AuthTokenTimeout = "TWO_HOURS"
	AuthTokenTimeoutFourHours        AuthTokenTimeout = "FOUR_HOURS"
	AuthTokenTimeoutEightHours       AuthTokenTimeout = "EIGHT_HOURS"
)

type AchStatus string

const (
	AchStatusApproved AchStatus = "Approved"
	AchStatusRejected AchStatus = "Rejected"
	AchStatusCancel   AchStatus = "Cancel"
	AchStatusError    AchStatus = "Error"
)

type ProfessionalStatus string

const (
	ProfessionalStatusProfessional    ProfessionalStatus = "PROFESSIONAL"
	ProfessionalStatusNonProfessional ProfessionalStatus = "NON_PROFESSIONAL"
	ProfessionalStatusUnknownStatus   ProfessionalStatus = "UNKNOWN_STATUS"
)

type OptionTradingLevel string

const (
	OptionTradingLevelCovered OptionTradingLevel = "COVERED"
	OptionTradingLevelFull    OptionTradingLevel = "FULL"
	OptionTradingLevelLong    OptionTradingLevel = "LONG"
	OptionTradingLevelSpread  OptionTradingLevel = "SPREAD"
	OptionTradingLevelNone    OptionTradingLevel = "NONE"
)

type Instrument struct {
	AssetType   AssetType `json:"assetType,omitempty"`
	Cusip       string    `json:"cusip,omitempty"`
	Description string    `json:"description,omitempty"`
	Symbol      string    `json:"symbol,omitempty"`
}

type Positions struct {
	AgedQuantity                   float64     `json:"agedQuantity,omitempty"`
	AveragePrice                   float64     `json:"averagePrice,omitempty"`
	CurrentDayProfitLoss           float64     `json:"currentDayProfitLoss,omitempty"`
	CurrentDayProfitLossPercentage float64     `json:"currentDayProfitLossPercentage,omitempty"`
	Instrument                     *Instrument `json:"instrument,omitempty"`
	LongQuantity                   float64     `json:"longQuantity,omitempty"`
	MarketValue                    float64     `json:"marketValue,omitempty"`
	SettledLongQuantity            float64     `json:"settledLongQuantity,omitempty"`
	SettledShortQuantity           float64     `json:"settledShortQuantity,omitempty"`
	ShortQuantity                  float64     `json:"shortQuantity,omitempty"`
}

type CancelTime struct {
	Date        string `json:"date,omitempty"`
	ShortFormat bool   `json:"shortFormat,omitempty"`
}

type OrderLegCollection struct {
	Instruction    Instruction    `json:"instruction,omitempty"`
	Instrument     *Instrument    `json:"instrument,omitempty"`
	LegID          int64          `json:"legId,omitempty"`
	OrderLegType   OrderLegType   `json:"orderLegType,omitempty"`
	PositionEffect PositionEffect `json:"positionEffect,omitempty"`
	Quantity       float64        `json:"quantity,omitempty"`
	QuantityType   QuantityType   `json:"quantityType,omitempty"`
}

type OrderActivityCollection struct {
	ActivityType ActivityType `json:"activityType,omitempty"`
}

type OrderStrategies struct {
	AccountID                int64                      `json:"accountId,omitempty"`
	ActivationPrice          float64                    `json:"activationPrice,omitempty"`
	Cancelable               bool                       `json:"cancelable,omitempty"`
	CancelTime               *CancelTime                `json:"cancelTime,omitempty"`
	ChildOrderStrategies     []Any                      `json:"childOrderStrategies,omitempty"`
	CloseTime                DateTime                   `json:"closeTime,omitempty"`
	ComplexOrderStrategyType ComplexOrderStrategyType   `json:"complexOrderStrategyType,omitempty"`
	DestinationLinkName      string                     `json:"destinationLinkName,omitempty"`
	Duration                 Duration                   `json:"duration,omitempty"`
	Editable                 bool                       `json:"editable,omitempty"`
	EnteredTime              DateTime                   `json:"enteredTime,omitempty"`
	FilledQuantity           float64                    `json:"filledQuantity,omitempty"`
	OrderActivityCollection  []*OrderActivityCollection `json:"orderActivityCollection,omitempty"`
	OrderID                  int64                      `json:"orderId,omitempty"`
	OrderLegCollection       []*OrderLegCollection      `json:"orderLegCollection,omitempty"`
	OrderStrategyType        OrderStrategyType          `json:"orderStrategyType,omitempty"`
	OrderType                OrderType                  `json:"orderType,omitempty"`
	Price                    float64                    `json:"price,omitempty"`
	PriceLinkBasis           PriceLinkBasis             `json:"priceLinkBasis,omitempty"`
	PriceLinkType            PriceLinkType              `json:"priceLinkType,omitempty"`
	Quantity                 float64                    `json:"quantity,omitempty"`
	ReleaseTime              DateTime                   `json:"releaseTime,omitempty"`
	RemainingQuantity        float64                    `json:"remainingQuantity,omitempty"`
	ReplacingOrderCollection []Any                      `json:"replacingOrderCollection,omitempty"`
	RequestedDestination     RequestedDestination       `json:"requestedDestination,omitempty"`
	Session                  Session                    `json:"session,omitempty"`
	SpecialInstruction       SpecialInstruction         `json:"specialInstruction,omitempty"`
	Status                   Status                     `json:"status,omitempty"`
	StatusDescription        string                     `json:"statusDescription,omitempty"`
	StopPrice                float64                    `json:"stopPrice,omitempty"`
	StopPriceLinkBasis       StopPriceLinkBasis         `json:"stopPriceLinkBasis,omitempty"`
	StopPriceLinkType        StopPriceLinkType          `json:"stopPriceLinkType,omitempty"`
	StopPriceOffset          float64                    `json:"stopPriceOffset,omitempty"`
	StopType                 StopType                   `json:"stopType,omitempty"`
	Tag                      string                     `json:"tag,omitempty"`
	TaxLotMethod             TaxLotMethod               `json:"taxLotMethod,omitempty"`
}

type SecuritiesAccount struct {
	AccountID               string             `json:"accountId,omitempty"`
	IsClosingOnlyRestricted bool               `json:"isClosingOnlyRestricted,omitempty"`
	IsDayTrader             bool               `json:"isDayTrader,omitempty"`
	OrderStrategies         []*OrderStrategies `json:"orderStrategies,omitempty"`
	Positions               []*Positions       `json:"positions,omitempty"`
	RoundTrips              int64              `json:"roundTrips,omitempty"`
	Type                    Type               `json:"type,omitempty"`
}

type InitialBalances struct {
	AccountValue                     float64 `json:"accountValue,omitempty"`
	AccruedInterest                  float64 `json:"accruedInterest,omitempty"`
	AvailableFundsNonMarginableTrade float64 `json:"availableFundsNonMarginableTrade,omitempty"`
	BondValue                        float64 `json:"bondValue,omitempty"`
	BuyingPower                      float64 `json:"buyingPower,omitempty"`
	CashAvailableForTrading          float64 `json:"cashAvailableForTrading,omitempty"`
	CashBalance                      float64 `json:"cashBalance,omitempty"`
	CashReceipts                     float64 `json:"cashReceipts,omitempty"`
	DayTradingBuyingPower            float64 `json:"dayTradingBuyingPower,omitempty"`
	DayTradingBuyingPowerCall        float64 `json:"dayTradingBuyingPowerCall,omitempty"`
	DayTradingEquityCall             float64 `json:"dayTradingEquityCall,omitempty"`
	Equity                           float64 `json:"equity,omitempty"`
	EquityPercentage                 float64 `json:"equityPercentage,omitempty"`
	IsInCall                         bool    `json:"isInCall,omitempty"`
	LiquidationValue                 float64 `json:"liquidationValue,omitempty"`
	LongMarginValue                  float64 `json:"longMarginValue,omitempty"`
	LongOptionMarketValue            float64 `json:"longOptionMarketValue,omitempty"`
	LongStockValue                   float64 `json:"longStockValue,omitempty"`
	MaintenanceCall                  float64 `json:"maintenanceCall,omitempty"`
	MaintenanceRequirement           float64 `json:"maintenanceRequirement,omitempty"`
	Margin                           float64 `json:"margin,omitempty"`
	MarginBalance                    float64 `json:"marginBalance,omitempty"`
	MarginEquity                     float64 `json:"marginEquity,omitempty"`
	MoneyMarketFund                  float64 `json:"moneyMarketFund,omitempty"`
	MutualFundValue                  float64 `json:"mutualFundValue,omitempty"`
	PendingDeposits                  float64 `json:"pendingDeposits,omitempty"`
	RegTCall                         float64 `json:"regTCall,omitempty"`
	ShortBalance                     float64 `json:"shortBalance,omitempty"`
	ShortMarginValue                 float64 `json:"shortMarginValue,omitempty"`
	ShortOptionMarketValue           float64 `json:"shortOptionMarketValue,omitempty"`
	ShortStockValue                  float64 `json:"shortStockValue,omitempty"`
	TotalCash                        float64 `json:"totalCash,omitempty"`
	UnsettledCash                    float64 `json:"unsettledCash,omitempty"`
}

type CurrentBalances struct {
	AccruedInterest                  float64 `json:"accruedInterest,omitempty"`
	AvailableFunds                   float64 `json:"availableFunds,omitempty"`
	AvailableFundsNonMarginableTrade float64 `json:"availableFundsNonMarginableTrade,omitempty"`
	BondValue                        float64 `json:"bondValue,omitempty"`
	BuyingPower                      float64 `json:"buyingPower,omitempty"`
	BuyingPowerNonMarginableTrade    float64 `json:"buyingPowerNonMarginableTrade,omitempty"`
	CashBalance                      float64 `json:"cashBalance,omitempty"`
	CashReceipts                     float64 `json:"cashReceipts,omitempty"`
	DayTradingBuyingPower            float64 `json:"dayTradingBuyingPower,omitempty"`
	DayTradingBuyingPowerCall        float64 `json:"dayTradingBuyingPowerCall,omitempty"`
	Equity                           float64 `json:"equity,omitempty"`
	EquityPercentage                 float64 `json:"equityPercentage,omitempty"`
	IsInCall                         bool    `json:"isInCall,omitempty"`
	LiquidationValue                 float64 `json:"liquidationValue,omitempty"`
	LongMarginValue                  float64 `json:"longMarginValue,omitempty"`
	LongMarketValue                  float64 `json:"longMarketValue,omitempty"`
	LongOptionMarketValue            float64 `json:"longOptionMarketValue,omitempty"`
	MaintenanceCall                  float64 `json:"maintenanceCall,omitempty"`
	MaintenanceRequirement           float64 `json:"maintenanceRequirement,omitempty"`
	MarginBalance                    float64 `json:"marginBalance,omitempty"`
	MoneyMarketFund                  float64 `json:"moneyMarketFund,omitempty"`
	MutualFundValue                  float64 `json:"mutualFundValue,omitempty"`
	OptionBuyingPower                float64 `json:"optionBuyingPower,omitempty"`
	PendingDeposits                  float64 `json:"pendingDeposits,omitempty"`
	RegTCall                         float64 `json:"regTCall,omitempty"`
	Savings                          float64 `json:"savings,omitempty"`
	ShortBalance                     float64 `json:"shortBalance,omitempty"`
	ShortMarginValue                 float64 `json:"shortMarginValue,omitempty"`
	ShortMarketValue                 float64 `json:"shortMarketValue,omitempty"`
	ShortOptionMarketValue           float64 `json:"shortOptionMarketValue,omitempty"`
	Sma                              float64 `json:"sma,omitempty"`
	StockBuyingPower                 float64 `json:"stockBuyingPower,omitempty"`
}

type ProjectedBalances struct {
	AccruedInterest                  float64 `json:"accruedInterest,omitempty"`
	AvailableFunds                   float64 `json:"availableFunds,omitempty"`
	AvailableFundsNonMarginableTrade float64 `json:"availableFundsNonMarginableTrade,omitempty"`
	BondValue                        float64 `json:"bondValue,omitempty"`
	BuyingPower                      float64 `json:"buyingPower,omitempty"`
	BuyingPowerNonMarginableTrade    float64 `json:"buyingPowerNonMarginableTrade,omitempty"`
	CashBalance                      float64 `json:"cashBalance,omitempty"`
	CashReceipts                     float64 `json:"cashReceipts,omitempty"`
	DayTradingBuyingPower            float64 `json:"dayTradingBuyingPower,omitempty"`
	DayTradingBuyingPowerCall        float64 `json:"dayTradingBuyingPowerCall,omitempty"`
	Equity                           float64 `json:"equity,omitempty"`
	EquityPercentage                 float64 `json:"equityPercentage,omitempty"`
	IsInCall                         bool    `json:"isInCall,omitempty"`
	LiquidationValue                 float64 `json:"liquidationValue,omitempty"`
	LongMarginValue                  float64 `json:"longMarginValue,omitempty"`
	LongMarketValue                  float64 `json:"longMarketValue,omitempty"`
	LongOptionMarketValue            float64 `json:"longOptionMarketValue,omitempty"`
	MaintenanceCall                  float64 `json:"maintenanceCall,omitempty"`
	MaintenanceRequirement           float64 `json:"maintenanceRequirement,omitempty"`
	MarginBalance                    float64 `json:"marginBalance,omitempty"`
	MoneyMarketFund                  float64 `json:"moneyMarketFund,omitempty"`
	MutualFundValue                  float64 `json:"mutualFundValue,omitempty"`
	OptionBuyingPower                float64 `json:"optionBuyingPower,omitempty"`
	PendingDeposits                  float64 `json:"pendingDeposits,omitempty"`
	RegTCall                         float64 `json:"regTCall,omitempty"`
	Savings                          float64 `json:"savings,omitempty"`
	ShortBalance                     float64 `json:"shortBalance,omitempty"`
	ShortMarginValue                 float64 `json:"shortMarginValue,omitempty"`
	ShortMarketValue                 float64 `json:"shortMarketValue,omitempty"`
	ShortOptionMarketValue           float64 `json:"shortOptionMarketValue,omitempty"`
	Sma                              float64 `json:"sma,omitempty"`
	StockBuyingPower                 float64 `json:"stockBuyingPower,omitempty"`
}

type OptionDeliverables struct {
	AssetType        AssetType    `json:"assetType,omitempty"`
	CurrencyType     CurrencyType `json:"currencyType,omitempty"`
	DeliverableUnits float64      `json:"deliverableUnits,omitempty"`
	Symbol           string       `json:"symbol,omitempty"`
}

type ExecutionLegs struct {
	LegID             int64    `json:"legId,omitempty"`
	MismarkedQuantity float64  `json:"mismarkedQuantity,omitempty"`
	Price             float64  `json:"price,omitempty"`
	Quantity          float64  `json:"quantity,omitempty"`
	Time              DateTime `json:"time,omitempty"`
}

type Account struct {
	AccountID               string                `json:"accountId,omitempty"`
	ActivityType            ActivityType          `json:"activityType,omitempty"`
	AssetType               AssetType             `json:"assetType,omitempty"`
	CurrentBalances         *CurrentBalances      `json:"currentBalances,omitempty"`
	Cusip                   string                `json:"cusip,omitempty"`
	Description             string                `json:"description,omitempty"`
	ExecutionLegs           []*ExecutionLegs      `json:"executionLegs,omitempty"`
	ExecutionType           ExecutionType         `json:"executionType,omitempty"`
	Factor                  float64               `json:"factor,omitempty"`
	InitialBalances         *InitialBalances      `json:"initialBalances,omitempty"`
	IsClosingOnlyRestricted bool                  `json:"isClosingOnlyRestricted,omitempty"`
	IsDayTrader             bool                  `json:"isDayTrader,omitempty"`
	MaturityDate            DateTime              `json:"maturityDate,omitempty"`
	OptionDeliverables      []*OptionDeliverables `json:"optionDeliverables,omitempty"`
	OptionMultiplier        int64                 `json:"optionMultiplier,omitempty"`
	OrderRemainingQuantity  float64               `json:"orderRemainingQuantity,omitempty"`
	OrderStrategies         []*OrderStrategies    `json:"orderStrategies,omitempty"`
	Positions               []*Positions          `json:"positions,omitempty"`
	ProjectedBalances       *ProjectedBalances    `json:"projectedBalances,omitempty"`
	PutCall                 PutCall               `json:"putCall,omitempty"`
	Quantity                float64               `json:"quantity,omitempty"`
	RoundTrips              int64                 `json:"roundTrips,omitempty"`
	SecuritiesAccount       *SecuritiesAccount    `json:"securitiesAccount,omitempty"`
	Symbol                  string                `json:"symbol,omitempty"`
	Type                    Type                  `json:"type,omitempty"`
	UnderlyingSymbol        string                `json:"underlyingSymbol,omitempty"`
	VariableRate            float64               `json:"variableRate,omitempty"`
}

type Hours struct {
	Category     string     `json:"category,omitempty"`
	Date         string     `json:"date,omitempty"`
	Exchange     string     `json:"exchange,omitempty"`
	IsOpen       bool       `json:"isOpen,omitempty"`
	MarketType   MarketType `json:"marketType,omitempty"`
	Product      string     `json:"product,omitempty"`
	ProductName  string     `json:"productName,omitempty"`
	SessionHours Any        `json:"sessionHours,omitempty"`
}

type Mover struct {
	Change      float64   `json:"change,omitempty"`
	Description string    `json:"description,omitempty"`
	Direction   Direction `json:"direction,omitempty"`
	Last        float64   `json:"last,omitempty"`
	Symbol      string    `json:"symbol,omitempty"`
	TotalVolume int64     `json:"totalVolume,omitempty"`
}

type Order struct {
	AccountID                int64                      `json:"accountId,omitempty"`
	ActivationPrice          float64                    `json:"activationPrice,omitempty"`
	ActivityType             ActivityType               `json:"activityType,omitempty"`
	AssetType                AssetType                  `json:"assetType,omitempty"`
	Cancelable               bool                       `json:"cancelable,omitempty"`
	CancelTime               *CancelTime                `json:"cancelTime,omitempty"`
	ChildOrderStrategies     []Any                      `json:"childOrderStrategies,omitempty"`
	CloseTime                DateTime                   `json:"closeTime,omitempty"`
	ComplexOrderStrategyType ComplexOrderStrategyType   `json:"complexOrderStrategyType,omitempty"`
	Cusip                    string                     `json:"cusip,omitempty"`
	Description              string                     `json:"description,omitempty"`
	DestinationLinkName      string                     `json:"destinationLinkName,omitempty"`
	Duration                 Duration                   `json:"duration,omitempty"`
	Editable                 bool                       `json:"editable,omitempty"`
	EnteredTime              DateTime                   `json:"enteredTime,omitempty"`
	ExecutionLegs            []*ExecutionLegs           `json:"executionLegs,omitempty"`
	ExecutionType            ExecutionType              `json:"executionType,omitempty"`
	Factor                   float64                    `json:"factor,omitempty"`
	FilledQuantity           float64                    `json:"filledQuantity,omitempty"`
	MaturityDate             DateTime                   `json:"maturityDate,omitempty"`
	OptionDeliverables       []*OptionDeliverables      `json:"optionDeliverables,omitempty"`
	OptionMultiplier         int64                      `json:"optionMultiplier,omitempty"`
	OrderActivityCollection  []*OrderActivityCollection `json:"orderActivityCollection,omitempty"`
	OrderID                  int64                      `json:"orderId,omitempty"`
	OrderLegCollection       []*OrderLegCollection      `json:"orderLegCollection,omitempty"`
	OrderRemainingQuantity   float64                    `json:"orderRemainingQuantity,omitempty"`
	OrderStrategyType        OrderStrategyType          `json:"orderStrategyType,omitempty"`
	OrderType                OrderType                  `json:"orderType,omitempty"`
	Price                    float64                    `json:"price,omitempty"`
	PriceLinkBasis           PriceLinkBasis             `json:"priceLinkBasis,omitempty"`
	PriceLinkType            PriceLinkType              `json:"priceLinkType,omitempty"`
	PutCall                  PutCall                    `json:"putCall,omitempty"`
	Quantity                 float64                    `json:"quantity,omitempty"`
	ReleaseTime              DateTime                   `json:"releaseTime,omitempty"`
	RemainingQuantity        float64                    `json:"remainingQuantity,omitempty"`
	ReplacingOrderCollection []Any                      `json:"replacingOrderCollection,omitempty"`
	RequestedDestination     RequestedDestination       `json:"requestedDestination,omitempty"`
	Session                  Session                    `json:"session,omitempty"`
	SpecialInstruction       SpecialInstruction         `json:"specialInstruction,omitempty"`
	Status                   Status                     `json:"status,omitempty"`
	StatusDescription        string                     `json:"statusDescription,omitempty"`
	StopPrice                float64                    `json:"stopPrice,omitempty"`
	StopPriceLinkBasis       StopPriceLinkBasis         `json:"stopPriceLinkBasis,omitempty"`
	StopPriceLinkType        StopPriceLinkType          `json:"stopPriceLinkType,omitempty"`
	StopPriceOffset          float64                    `json:"stopPriceOffset,omitempty"`
	StopType                 StopType                   `json:"stopType,omitempty"`
	Symbol                   string                     `json:"symbol,omitempty"`
	Tag                      string                     `json:"tag,omitempty"`
	TaxLotMethod             TaxLotMethod               `json:"taxLotMethod,omitempty"`
	Type                     Type                       `json:"type,omitempty"`
	UnderlyingSymbol         string                     `json:"underlyingSymbol,omitempty"`
	VariableRate             float64                    `json:"variableRate,omitempty"`
}

type Preferences struct {
	AuthTokenTimeout                 AuthTokenTimeout                 `json:"authTokenTimeout,omitempty"`
	DefaultAdvancedToolLaunch        DefaultAdvancedToolLaunch        `json:"defaultAdvancedToolLaunch,omitempty"`
	DefaultEquityOrderDuration       DefaultEquityOrderDuration       `json:"defaultEquityOrderDuration,omitempty"`
	DefaultEquityOrderLegInstruction DefaultEquityOrderLegInstruction `json:"defaultEquityOrderLegInstruction,omitempty"`
	DefaultEquityOrderMarketSession  DefaultEquityOrderMarketSession  `json:"defaultEquityOrderMarketSession,omitempty"`
	DefaultEquityOrderPriceLinkType  DefaultEquityOrderPriceLinkType  `json:"defaultEquityOrderPriceLinkType,omitempty"`
	DefaultEquityOrderType           DefaultEquityOrderType           `json:"defaultEquityOrderType,omitempty"`
	DefaultEquityQuantity            int64                            `json:"defaultEquityQuantity,omitempty"`
	DirectEquityRouting              bool                             `json:"directEquityRouting,omitempty"`
	DirectOptionsRouting             bool                             `json:"directOptionsRouting,omitempty"`
	EquityTaxLotMethod               EquityTaxLotMethod               `json:"equityTaxLotMethod,omitempty"`
	ExpressTrading                   bool                             `json:"expressTrading,omitempty"`
	MutualFundTaxLotMethod           MutualFundTaxLotMethod           `json:"mutualFundTaxLotMethod,omitempty"`
	OptionTaxLotMethod               OptionTaxLotMethod               `json:"optionTaxLotMethod,omitempty"`
}

type Quote struct {
	AskID                        string  `json:"askId,omitempty"`
	AskPrice                     float64 `json:"askPrice,omitempty"`
	AskPriceInDouble             float64 `json:"askPriceInDouble,omitempty"`
	AskSize                      int64   `json:"askSize,omitempty"`
	BidID                        string  `json:"bidId,omitempty"`
	BidPrice                     float64 `json:"bidPrice,omitempty"`
	BidPriceInDouble             float64 `json:"bidPriceInDouble,omitempty"`
	BidSize                      int64   `json:"bidSize,omitempty"`
	ChangeInDouble               float64 `json:"changeInDouble,omitempty"`
	ClosePrice                   float64 `json:"closePrice,omitempty"`
	ClosePriceInDouble           float64 `json:"closePriceInDouble,omitempty"`
	ContractType                 string  `json:"contractType,omitempty"`
	Deliverables                 string  `json:"deliverables,omitempty"`
	Delta                        float64 `json:"delta,omitempty"`
	DeltaInDouble                float64 `json:"deltaInDouble,omitempty"`
	Description                  string  `json:"description,omitempty"`
	Digits                       int64   `json:"digits,omitempty"`
	DivAmount                    float64 `json:"divAmount,omitempty"`
	DivDate                      string  `json:"divDate,omitempty"`
	DivYield                     float64 `json:"divYield,omitempty"`
	Exchange                     string  `json:"exchange,omitempty"`
	ExchangeName                 string  `json:"exchangeName,omitempty"`
	ExerciseType                 string  `json:"exerciseType,omitempty"`
	ExpirationType               string  `json:"expirationType,omitempty"`
	FiftyTwoWkHigh               float64 `json:"52WkHigh,omitempty"`
	FiftyTwoWkHighInDouble       float64 `json:"52WkHighInDouble,omitempty"`
	FiftyTwoWkLow                float64 `json:"52WkLow,omitempty"`
	FiftyTwoWkLowInDouble        float64 `json:"52WkLowInDouble,omitempty"`
	FutureActiveSymbol           string  `json:"futureActiveSymbol,omitempty"`
	FutureExpirationDate         string  `json:"futureExpirationDate,omitempty"`
	FutureIsActive               bool    `json:"futureIsActive,omitempty"`
	FutureIsTradable             bool    `json:"futureIsTradable,omitempty"`
	FutureMultiplier             float64 `json:"futureMultiplier,omitempty"`
	FuturePercentChange          float64 `json:"futurePercentChange,omitempty"`
	FuturePriceFormat            string  `json:"futurePriceFormat,omitempty"`
	FutureSettlementPrice        float64 `json:"futureSettlementPrice,omitempty"`
	FutureTradingHours           string  `json:"futureTradingHours,omitempty"`
	Gamma                        float64 `json:"gamma,omitempty"`
	GammaInDouble                float64 `json:"gammaInDouble,omitempty"`
	HighPrice                    float64 `json:"highPrice,omitempty"`
	HighPriceInDouble            float64 `json:"highPriceInDouble,omitempty"`
	InTheMoney                   bool    `json:"inTheMoney,omitempty"`
	IsTradable                   bool    `json:"isTradable,omitempty"`
	LastID                       string  `json:"lastId,omitempty"`
	LastPrice                    float64 `json:"lastPrice,omitempty"`
	LastPriceInDouble            float64 `json:"lastPriceInDouble,omitempty"`
	LastSize                     int64   `json:"lastSize,omitempty"`
	LowPrice                     float64 `json:"lowPrice,omitempty"`
	LowPriceInDouble             float64 `json:"lowPriceInDouble,omitempty"`
	Marginable                   bool    `json:"marginable,omitempty"`
	Mark                         float64 `json:"mark,omitempty"`
	MarketMaker                  string  `json:"marketMaker,omitempty"`
	MoneyIntrinsicValue          float64 `json:"moneyIntrinsicValue,omitempty"`
	MoneyIntrinsicValueInDouble  float64 `json:"moneyIntrinsicValueInDouble,omitempty"`
	Multiplier                   float64 `json:"multiplier,omitempty"`
	MultiplierInDouble           float64 `json:"multiplierInDouble,omitempty"`
	NAV                          float64 `json:"nAV,omitempty"`
	NetChange                    float64 `json:"netChange,omitempty"`
	NetChangeInDouble            float64 `json:"netChangeInDouble,omitempty"`
	OpenInterest                 float64 `json:"openInterest,omitempty"`
	OpenPrice                    float64 `json:"openPrice,omitempty"`
	OpenPriceInDouble            float64 `json:"openPriceInDouble,omitempty"`
	PeRatio                      float64 `json:"peRatio,omitempty"`
	PercentChange                float64 `json:"percentChange,omitempty"`
	Product                      string  `json:"product,omitempty"`
	QuoteTimeInLong              int64   `json:"quoteTimeInLong,omitempty"`
	RegularMarketLastPrice       float64 `json:"regularMarketLastPrice,omitempty"`
	RegularMarketLastSize        int64   `json:"regularMarketLastSize,omitempty"`
	RegularMarketNetChange       float64 `json:"regularMarketNetChange,omitempty"`
	RegularMarketTradeTimeInLong int64   `json:"regularMarketTradeTimeInLong,omitempty"`
	Rho                          float64 `json:"rho,omitempty"`
	RhoInDouble                  float64 `json:"rhoInDouble,omitempty"`
	SecurityStatus               string  `json:"securityStatus,omitempty"`
	SettlementType               string  `json:"settlementType,omitempty"`
	Shortable                    bool    `json:"shortable,omitempty"`
	StrikePrice                  float64 `json:"strikePrice,omitempty"`
	StrikePriceInDouble          float64 `json:"strikePriceInDouble,omitempty"`
	Symbol                       string  `json:"symbol,omitempty"`
	TheoreticalOptionValue       float64 `json:"theoreticalOptionValue,omitempty"`
	Theta                        float64 `json:"theta,omitempty"`
	ThetaInDouble                float64 `json:"thetaInDouble,omitempty"`
	Tick                         float64 `json:"tick,omitempty"`
	TickAmount                   float64 `json:"tickAmount,omitempty"`
	TimeValue                    float64 `json:"timeValue,omitempty"`
	TimeValueInDouble            float64 `json:"timeValueInDouble,omitempty"`
	TotalVolume                  int64   `json:"totalVolume,omitempty"`
	TradeTimeInLong              int64   `json:"tradeTimeInLong,omitempty"`
	TradingHours                 string  `json:"tradingHours,omitempty"`
	Underlying                   string  `json:"underlying,omitempty"`
	UnderlyingPrice              float64 `json:"underlyingPrice,omitempty"`
	UvExpirationType             string  `json:"uvExpirationType,omitempty"`
	Vega                         float64 `json:"vega,omitempty"`
	VegaInDouble                 float64 `json:"vegaInDouble,omitempty"`
	Volatility                   float64 `json:"volatility,omitempty"`
}

type TransactionItem struct {
	AccountID            int64          `json:"accountId,omitempty"`
	Amount               float64        `json:"amount,omitempty"`
	Cost                 float64        `json:"cost,omitempty"`
	Instruction          Instruction    `json:"instruction,omitempty"`
	Instrument           *Instrument    `json:"instrument,omitempty"`
	ParentChildIndicator string         `json:"parentChildIndicator,omitempty"`
	ParentOrderKey       int64          `json:"parentOrderKey,omitempty"`
	PositionEffect       PositionEffect `json:"positionEffect,omitempty"`
	Price                float64        `json:"price,omitempty"`
}

type Transaction struct {
	AccruedInterest               float64          `json:"accruedInterest,omitempty"`
	AchStatus                     AchStatus        `json:"achStatus,omitempty"`
	CashBalanceEffectFlag         bool             `json:"cashBalanceEffectFlag,omitempty"`
	ClearingReferenceNumber       string           `json:"clearingReferenceNumber,omitempty"`
	DayTradeBuyingPowerEffect     float64          `json:"dayTradeBuyingPowerEffect,omitempty"`
	Description                   string           `json:"description,omitempty"`
	Fees                          Any              `json:"fees,omitempty"`
	NetAmount                     float64          `json:"netAmount,omitempty"`
	OrderDate                     DateTime         `json:"orderDate,omitempty"`
	OrderID                       string           `json:"orderId,omitempty"`
	RequirementReallocationAmount float64          `json:"requirementReallocationAmount,omitempty"`
	SettlementDate                DateTime         `json:"settlementDate,omitempty"`
	Sma                           float64          `json:"sma,omitempty"`
	SubAccount                    string           `json:"subAccount,omitempty"`
	TransactionDate               DateTime         `json:"transactionDate,omitempty"`
	TransactionID                 int64            `json:"transactionId,omitempty"`
	TransactionItem               *TransactionItem `json:"transactionItem,omitempty"`
	TransactionSubType            string           `json:"transactionSubType,omitempty"`
	Type                          Type             `json:"type,omitempty"`
}

type StreamerInfo struct {
	AccessLevel       string   `json:"accessLevel,omitempty"`
	Acl               string   `json:"acl,omitempty"`
	AppID             string   `json:"appId,omitempty"`
	StreamerBinaryUrl string   `json:"streamerBinaryUrl,omitempty"`
	StreamerSocketUrl string   `json:"streamerSocketUrl,omitempty"`
	Token             string   `json:"token,omitempty"`
	TokenTimestamp    DateTime `json:"tokenTimestamp,omitempty"`
	UserGroup         string   `json:"userGroup,omitempty"`
}

type Quotes struct {
	IsAmexDelayed   bool `json:"isAmexDelayed,omitempty"`
	IsCmeDelayed    bool `json:"isCmeDelayed,omitempty"`
	IsForexDelayed  bool `json:"isForexDelayed,omitempty"`
	IsIceDelayed    bool `json:"isIceDelayed,omitempty"`
	IsNasdaqDelayed bool `json:"isNasdaqDelayed,omitempty"`
	IsNyseDelayed   bool `json:"isNyseDelayed,omitempty"`
	IsOpraDelayed   bool `json:"isOpraDelayed,omitempty"`
}

type Keys struct {
	Key string `json:"key,omitempty"`
}

type StreamerSubscriptionKeys struct {
	Keys []*Keys `json:"keys,omitempty"`
}

type Authorizations struct {
	AdvancedMargin     bool               `json:"advancedMargin,omitempty"`
	Apex               bool               `json:"apex,omitempty"`
	LevelTwoQuotes     bool               `json:"levelTwoQuotes,omitempty"`
	MarginTrading      bool               `json:"marginTrading,omitempty"`
	OptionTradingLevel OptionTradingLevel `json:"optionTradingLevel,omitempty"`
	ScottradeAccount   bool               `json:"scottradeAccount,omitempty"`
	StockTrading       bool               `json:"stockTrading,omitempty"`
	StreamerAccess     bool               `json:"streamerAccess,omitempty"`
	StreamingNews      bool               `json:"streamingNews,omitempty"`
}

type Accounts struct {
	AccountCdDomainID string          `json:"accountCdDomainId,omitempty"`
	AccountID         string          `json:"accountId,omitempty"`
	Acl               string          `json:"acl,omitempty"`
	Authorizations    *Authorizations `json:"authorizations,omitempty"`
	Company           string          `json:"company,omitempty"`
	Description       string          `json:"description,omitempty"`
	DisplayName       string          `json:"displayName,omitempty"`
	Preferences       *Preferences    `json:"preferences,omitempty"`
	Segment           string          `json:"segment,omitempty"`
	SurrogateIDs      Any             `json:"surrogateIds,omitempty"`
}

type UserPrincipal struct {
	AccessLevel              string                    `json:"accessLevel,omitempty"`
	Accounts                 []*Accounts               `json:"accounts,omitempty"`
	AuthToken                string                    `json:"authToken,omitempty"`
	LastLoginTime            DateTime                  `json:"lastLoginTime,omitempty"`
	LoginTime                DateTime                  `json:"loginTime,omitempty"`
	PrimaryAccountID         string                    `json:"primaryAccountId,omitempty"`
	ProfessionalStatus       ProfessionalStatus        `json:"professionalStatus,omitempty"`
	Quotes                   *Quotes                   `json:"quotes,omitempty"`
	StalePassword            bool                      `json:"stalePassword,omitempty"`
	StreamerInfo             *StreamerInfo             `json:"streamerInfo,omitempty"`
	StreamerSubscriptionKeys *StreamerSubscriptionKeys `json:"streamerSubscriptionKeys,omitempty"`
	TokenExpirationTime      DateTime                  `json:"tokenExpirationTime,omitempty"`
	UserCdDomainID           string                    `json:"userCdDomainId,omitempty"`
	UserID                   string                    `json:"userId,omitempty"`
}

type WatchlistItems struct {
	AveragePrice  float64     `json:"averagePrice,omitempty"`
	Commission    float64     `json:"commission,omitempty"`
	Instrument    *Instrument `json:"instrument,omitempty"`
	PurchasedDate Any         `json:"purchasedDate,omitempty"`
	Quantity      float64     `json:"quantity,omitempty"`
	SequenceID    int64       `json:"sequenceId,omitempty"`
	Status        Status      `json:"status,omitempty"`
}

type Watchlist struct {
	AccountID      string            `json:"accountId,omitempty"`
	Name           string            `json:"name,omitempty"`
	Status         Status            `json:"status,omitempty"`
	WatchlistID    string            `json:"watchlistId,omitempty"`
	WatchlistItems []*WatchlistItems `json:"watchlistItems,omitempty"`
}
